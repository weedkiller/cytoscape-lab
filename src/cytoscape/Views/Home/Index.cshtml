@using System.Runtime.InteropServices.ComTypes
    @{
    ViewData["Title"] = "Home Page";
}
<div class="col-md-12">
    <div id="cy"></div>
    <div class="col-md-6">
        <textarea rows="10" readonly id="logBox" style="width: 100%;"></textarea>
    </div>
    <div class="col-md-6">
        <p class="col-md-2" style="margin-right: 5px">Database:</p>
        <input class="col-md-4" type="text" readonly id="dbText" /><br /><br />
        <p class="col-md-2" style="margin-right: 5px">Comments:</p>
        <textarea class="col-md-4" rows="3" readonly id="commentsBox" ></textarea>
    </div>
</div>

@section scripts{
    <script src="js/cytoscape.js"></script>
    <script>
        $(document)
            .ready(function() {
                var cy = cytoscape({
                    container: document.getElementById('cy'),
                    elements: [
                        // list of graph elements to start with
                        { data: { id: 'SwecoCore', dbName: 'SwecoDB', comments: 'some info' },  position: { x: 650, y: 200 } },

                        { data: { id: 'Sweco Contact', dbName: 'SwecoDB', comments: '' },       position: { x: 300, y: 75 } },
                        { data: { id: 'SOTS', dbName: 'SwecoDB', comments: '' },                position: { x: 300, y: 150 } },
                        { data: { id: 'Sweco@Work', dbName: 'SwecoDB', comments: '' },          position: { x: 300, y: 225 } },
                        { data: { id: 'PeopleAdmin', dbName: 'SwecoDB', comments: '' },         position: { x: 300, y: 300 } },

                        { data: { id: 'Sweco Office', dbName: 'SwecoDB', comments: '' },         position: { x: 100, y: 75 } },
                        { data: { id: 'Sweco Project', dbName: 'SwecoDB', comments: '' },       position: { x: 100, y: 175 } },
                        { data: { id: 'TellUs', dbName: 'SwecoDB', comments: '' },              position: { x: 200, y: 225 } },
                        { data: { id: 'Intranet', dbName: 'SwecoDB', comments: '' }, position: { x: 100, y: 225 } },
                        
                        
                        { data: { id: 'rel_1', source: 'Sweco Office', target: 'Sweco Contact', label: 'DeskId' } },
                        { data: { id: 'rel_2', source: 'SwecoCore', target: 'Sweco Contact', label: 'Employee Info \'url\'\nEmployee Function\nEmployeeInfo' } },
                        { data: { id: 'rel_3', source: 'SwecoCore', target: 'SOTS', label: 'SOTS' } },
                        { data: { id: 'rel_4', source: 'Sweco Project', target: 'Sweco@Work', label: '' } },
                        { data: { id: 'rel_5', source: 'Sweco@Work', target: 'SwecoCore', label: '' } },
                        { data: { id: 'rel_6', source: 'Sweco@Work', target: 'TellUs', label: 'Inquiry' } },
                        { data: { id: 'rel_7', source: 'TellUs', target: 'Intranet', label: 'Messages' } },
                        { data: { id: 'rel_8', source: 'PeopleAdmin', target: 'SwecoCore', label: 'Adresses\nBusinessAreas\nCompanies\Countries\nCurrencie\netc' } },
                    ],
                    style: [
                        // the stylesheet for the graph
                        {
                            selector: 'node',
                            style: {
                                'background-color': '#666666',
                                'label': 'data(id)',
                                'someData': 'data(someData)'
                            }
                        },
                        {
                            selector: 'edge',
                            style: {
                                'width': 3,
                                'line-color': '#ccc',
                                'curve-style': 'bezier',
                                'target-arrow-color': '#ccc',
                                'target-arrow-shape': 'triangle',
                                'label': 'data(label)',
                                'font-size': '10px',
                                'edge-text-rotation': 'autorotate',
                                'text-wrap': 'wrap',
                                'text-max-width': '200px'
                            }
                        },
                        {
                            selector: '.highlighted',
                            style: {
                                'border-color': '#666666',
                                'background-color': '#cccccc',
                                'border-width': '6'
                            }
                        },
                        {
                            selector: '.highlightedEdge',
                            style: {
                                'line-color': '#ff0000',
                                'width': '5'
                            }
                        },
                        {
                            selector: '.normalEdge',
                            style: {
                                'line-color': '#ff0000',
                                'width': '5'
                            }
                        }
                    ],
                    layout:
                    {
                        name: 'preset'
                        //    rows:
                        //1
                    }
                });
                console.log("cyto initialized...");

                var posX;
                var posY;

                cy.nodes()[4].css("background-image", "url(images/dk.png')");

                

                cy.$("node")
                    .on('grab',
                        function() {
                            posX = this.position().x;
                            posY = this.position().y;
                        });

                cy.$("node")
                    .on('free',
                        function() {
                            if (posX !== this.position().x || posY !== this.position().y) {
                                var d = new Date();
                                $("#logBox")
                                    .val(d.getHours() +
                                        ":" +
                                        (d.getMinutes() < 10 ? "0" : "") +
                                        d.getMinutes() +
                                        ":" +
                                        (d.getSeconds() < 10 ? "0" : "") +
                                        d.getSeconds() +
                                        " - New position of " +
                                        this.id() +
                                        ": { x: " +
                                        Math.round(this.position().x) +
                                        ", y: " +
                                        Math.round(this.position().y) +
                                        "}\n" +
                                        $("#logBox").val());
                            }
                            else {
                                this.select();
                            }
                        });
                cy.$("node")
                    .on('select', function() {
                        this.addClass('highlighted');
                        $("#dbText").val(this.data('dbName'));
                        $("#commentsBox").val(this.data('comments'));
                        var edges = this.neighborhood('edge');
                        edges.stop(true, true);
                        edges.animate({ style: { 'line-color': '#498fff', 'curve-style': 'bezier', 'target-arrow-color': '#498fff', width: 6 } }, { duration: 0 });
                    });

                cy.$("node")
                    .on('unselect', function () {
                        this.removeClass('highlighted');
                        $("#dbText").val('');
                        $("#commentsBox").val('');
                        var edges = this.neighborhood('edge');

                        edges.animate({ style: { 'line-color': '#ccc', 'curve-style': 'bezier', 'target-arrow-color': '#ccc', width: 3 } }, { duration: 0 });
                    });

                cy.$("node")
                    .on('mouseover', function () {
                        if (!this.selected()) {
                            var edges = this.neighborhood('edge');
                            edges.stop(true, false);
                            edges.animate({ style: { 'line-color': '#498fff', 'curve-style': 'bezier', 'target-arrow-color': '#498fff', width: 5 } }, { duration: 300 });
                        }
                    });

                cy.$("node")
                    .on('mouseout', function () {
                        if (!this.selected()){
                        var edges = this.neighborhood('edge');
                        var selectedNode = cy.nodes(function () {
                            return this.selected();
                        }).first();
                        //var selectedNode = selectedNodes.first();
                            var edgesExceptSelected = edges.filterFn(function(edge) {
                                return !edge.anySame(selectedNode.neighborhood('edge'));
                            });
                        edgesExceptSelected.stop(true, false);
                        edgesExceptSelected.animate({ style: { 'line-color': '#ccc', 'curve-style': 'bezier', 'target-arrow-color': '#ccc', width: 3 } }, { duration: 300 });
                        }
                    });
            });
    </script>
}
